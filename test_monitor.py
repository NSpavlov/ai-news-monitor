#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
sys.path.append('/home/ubuntu/ai_news_system')

from ai_news_monitor import AINewsMonitor
import logging

def test_monitor():
    """–¢–µ—Å—Ç—É—î–º–æ AI News Monitor"""
    print("üß™ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç AI News Monitor...")
    print("=" * 60)
    
    try:
        monitor = AINewsMonitor()
        
        # –¢–µ—Å—Ç—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        print("‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ")
        print(f"üìä –î–∂–µ—Ä–µ–ª –±–ª–æ–≥—ñ–≤: {len(monitor.ai_config['sources']['blogs'])}")
        print(f"üîë –ö–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤: {len(monitor.ai_config['filter_criteria']['keywords'])}")
        
        # –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫ –Ω–æ–≤–∏–Ω
        print("\nüîç –¢–µ—Å—Ç—É—é –ø–æ—à—É–∫ –Ω–æ–≤–∏–Ω...")
        news_list = monitor.search_ai_news()
        print(f"üì∞ –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏–Ω: {len(news_list)}")
        
        if news_list:
            print("\nüìã –ü—Ä–∏–∫–ª–∞–¥–∏ –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –Ω–æ–≤–∏–Ω:")
            for i, news in enumerate(news_list[:3]):
                print(f"{i+1}. {news['title'][:80]}...")
                print(f"   –î–∂–µ—Ä–µ–ª–æ: {news['source']}")
                print(f"   URL –ø—Ä–∞—Ü—é—î: {'‚úÖ' if monitor.check_url_validity(news['url']) else '‚ùå'}")
        
        # –¢–µ—Å—Ç—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é
        print("\nüéØ –¢–µ—Å—Ç—É—é —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é...")
        filtered_news = monitor.filter_news(news_list)
        print(f"‚úÖ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö –Ω–æ–≤–∏–Ω: {len(filtered_news)}")
        
        if filtered_news:
            # –¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä–µ–∫–ª–∞–¥ —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
            print("\nüåç –¢–µ—Å—Ç—É—é –ø–µ—Ä–µ–∫–ª–∞–¥ —Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è...")
            test_news = filtered_news[0]
            message = monitor.format_news_message(test_news)
            
            print("üìù –ü—Ä–∏–∫–ª–∞–¥ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
            print("-" * 40)
            print(message[:500] + "..." if len(message) > 500 else message)
            print("-" * 40)
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            filename = monitor.save_news_to_file(message, test_news)
            print(f"üíæ –¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {filename}")
            
            # –ü–∏—Ç–∞—î–º–æ —á–∏ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —É Telegram
            response = input("\n‚ùì –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram? (y/n): ")
            if response.lower() == 'y':
                if monitor.send_to_telegram(message):
                    print("‚úÖ –¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
                    monitor.sent_news.append(test_news['hash'])
                    monitor.save_sent_news()
                else:
                    print("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
        
        print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–Ü–®–ù–û!")
        print("–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∫–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_monitor()